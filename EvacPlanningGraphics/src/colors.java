

enum Color {
	
	// 170 names in RGB from Storm Lake includes X11 and CSS4 colors
	// Author: Robert Heckendorn
	// University of Idaho, 2014
	//
	Alizarin(0xe3, 0x26, 0x36),
	Amaranth(0xe5, 0x2b, 0x50),
	Amber(0xff, 0xbf, 0x00),
	Amethyst(0x99, 0x66, 0xcc),
	Apricot(0xfb, 0xce, 0xb1),
	Aqua(0x00, 0xff, 0xff),             // same as Cyan
	Aquamarine(0x7f, 0xff, 0xd4),
	Asparagus(0x7b, 0xa0, 0x5b),
	Auburn(0x6d, 0x35, 0x1a),
	Azure(0x00, 0x7f, 0xff),
	Beige(0xf5, 0xf5, 0xdc),
	Bistre(0x3d, 0x2b, 0x1f),
	Black(0x00, 0x00, 0x00),
	Blue(0x00, 0x00, 0xff),
	BlueGreen(0x00, 0xdd, 0xdd),
	BlueViolet(0x8a, 0x2b, 0xe2),
	BondiBlue(0x00, 0x95, 0xb6),
	Brass(0xb5, 0xa6, 0x42),
	Bronze(0xcd, 0x7f, 0x32),
	Brown(0x96, 0x4b, 0x00),
	Buff(0xf0, 0xdc, 0x82),
	Burgundy(0x90, 0x00, 0x20),
	BurntOrange(0xcc, 0x55, 0x00),
	BurntSienna(0xe9, 0x74, 0x51),
	BurntUmber(0x8a, 0x33, 0x24),
	CamouflageGreen(0x78, 0x86, 0x6b),
	CaputMortuum(0x59, 0x27, 0x20),
	Cardinal(0xc4, 0x1e, 0x3a),
	Carmine(0x96, 0x00, 0x18),
	CarrotOrange(0xed, 0x91, 0x21),
	Celadon(0xac, 0xe1, 0xaf),
	Cerise(0xde, 0x31, 0x63),
	Cerulean(0x00, 0x7b, 0xa7),
	Champagne(0xf7, 0xe7, 0xce),
	Charcoal(0x46, 0x46, 0x46),
	Chartreuse(0x7f, 0xff, 0x00),
	CherryBlossomPink(0xff, 0xb7, 0xc5),
	Chestnut(0xcd, 0x5c, 0x5c),
	Chocolate(0x7b, 0x3f, 0x00),
	Cinnabar(0xe3, 0x42, 0x34),         // same as Vermilion
	Cinnamon(0xd2, 0x69, 0x1e),
	Cobalt(0x00, 0x47, 0xab),
	Copper(0xb8, 0x73, 0x33),
	Coral(0xff, 0x7f, 0x50),
	Corn(0xfb, 0xec, 0x5d),
	Cornflower(0x64, 0x95, 0xed),
	Cream(0xff, 0xfd, 0xd0),
	Crimson(0xdc, 0x14, 0x3c),
	Cyan(0x00, 0xff, 0xff),             // same as Aqua
	Dandelion(0xfe, 0xd8, 0x5d),
	Denim(0x15, 0x60, 0xbd),
	Ecru(0xc2, 0xb2, 0x80),
	Emerald(0x50, 0xc8, 0x78),
	Eggplant(0x61, 0x40, 0x51),
	FaluRed(0x80, 0x18, 0x18),
	FernGreen(0x4f, 0x79, 0x42),
	Firebrick(0xb2, 0x22, 0x22),
	Flax(0xee, 0xdc, 0x82),
	ForestGreen(0x22, 0x8b, 0x22),
	FrenchRose(0xf6, 0x4a, 0x8a),
	Fuchsia(0xff, 0x00, 0xff),          // same as Magenta
	Gamboge(0xe4, 0x9b, 0x0f),
	Gold(0xd4, 0xaf, 0x37),
	Goldenrod(0xda, 0xa5, 0x20),
	Green(0x00, 0xff, 0x00),            // same as Lime
	Grey(0x80, 0x80, 0x80),
	HanPurple(0x52, 0x18, 0xfa),
	Harlequin(0x3f, 0xff, 0x00),
	Heliotrope(0xdf, 0x73, 0xff),
	HollywoodCerise(0xf4, 0x00, 0xa1),
	Indigo(0x00, 0x41, 0x6a),
	Ivory(0xff, 0xff, 0xf0),
	Jade(0x00, 0xa8, 0x6b),
	KellyGreen(0x4c, 0xbb, 0x17),
	Khaki(0xc3, 0xb0, 0x91),
	Lavender(0xb5, 0x7e, 0xdc),
	LawnGreen(0x7c, 0xfc, 0x00),
	Lemon(0xfd, 0xe9, 0x10),
	LemonChiffon(0xff, 0xfa, 0xcd),
	Lilac(0xc8, 0xa2, 0xc8),
	Lime(0x00, 0xff, 0x00),             // same a just Green
	LimeGreen(0x32, 0xcd, 0x32),
	Linen(0xfa, 0xf0, 0xe6),
	Magenta(0xff, 0x00, 0xff),          // same a Fuchsia
	Magnolia(0xf8, 0xf4, 0xff),
	Malachite(0x0b, 0xda, 0x51),
	Maroon(0x80, 0x00, 0x00),
	Mauve(0xe0, 0xb0, 0xff),
	MidnightBlue(0x19, 0x19, 0x70),
	MintGreen(0x98, 0xff, 0x98),
	MistyRose(0xff, 0xe4, 0xe1),
	MossGreen(0xad, 0xdf, 0xad),
	Mustard(0xff, 0xdb, 0x58),
	Myrtle(0x21, 0x42, 0x1e),
	NavajoWhite(0xff, 0xde, 0xad),
	NavyBlue(0x00, 0x00, 0x80),
	Ochre(0xcc, 0x77, 0x22),
	OfficeGreen(0x00, 0x80, 0x00),
	Olive(0x80, 0x80, 0x00),
	Olivine(0x9a, 0xb9, 0x73),
	Orange(0xff, 0x7f, 0x00),
	Orchid(0xda, 0x70, 0xd6),
	PapayaWhip(0xff, 0xef, 0xd5),
	Peach(0xff, 0xe5, 0xb4),
	Pear(0xd1, 0xe2, 0x31),
	Periwinkle(0xcc, 0xcc, 0xff),
	Persimmon(0xec, 0x58, 0x00),
	PineGreen(0x01, 0x79, 0x6f),
	Pink(0xff, 0xc0, 0xcb),
	Platinum(0xe5, 0xe4, 0xe2),
	Plum(0xcc, 0x99, 0xcc),
	PowderBlue(0xb0, 0xe0, 0xe6),
	Puce(0xcc, 0x88, 0x99),
	PrussianBlue(0x00, 0x31, 0x53),
	PsychedelicPurple(0xdd, 0x00, 0xff),
	Pumpkin(0xff, 0x75, 0x18),
	Purple(0x80, 0x00, 0x80),
	QuartzGrey(0x6c, 0x69, 0x61),
	RawUmber(0x73, 0x4a, 0x12),
	Razzmatazz(0xe3, 0x0b, 0x5c),
	Red(0xff, 0x00, 0x00),
	RobinEggBlue(0x00, 0xcc, 0xcc),
	Rose(0xff, 0x00, 0x7f),
	RoyalBlue(0x41, 0x69, 0xe1),
	RoyalPurple(0x6b, 0x3f, 0xa0),
	Ruby(0xe0, 0x11, 0x5f),
	Russet(0x80, 0x46, 0x1b),
	Rust(0xb7, 0x41, 0x0e),
	SafetyOrange(0xff, 0x66, 0x00),
	Saffron(0xf4, 0xc4, 0x30),
	Salmon(0xff, 0x8c, 0x69),
	SandyBrown(0xf4, 0xa4, 0x60),
	Sangria(0x92, 0x00, 0x0a),
	Sapphire(0x08, 0x25, 0x67),
	Scarlet(0xff, 0x24, 0x00),
	SchoolBusYellow(0xff, 0xd8, 0x00),
	SeaGreen(0x2e, 0x8b, 0x57),
	Seashell(0xff, 0xf5, 0xee),
	Sepia(0x70, 0x42, 0x14),
	ShamrockGreen(0x00, 0x9e, 0x60),
	ShockingPink(0xfc, 0x0f, 0xc0),
	Silver(0xc0, 0xc0, 0xc0),
	SkyBlue(0x87, 0xce, 0xeb),
	SlateGrey(0x70, 0x80, 0x90),
	Smalt(0x00, 0x33, 0x99),
	SpringBud(0xa7, 0xfc, 0x00),
	SpringGreen(0x00, 0xff, 0x7f),
	SteelBlue(0x46, 0x82, 0xb4),
	Tan(0xd2, 0xb4, 0x8c),
	Tangerine(0xf2, 0x85, 0x00),
	Taupe(0x48, 0x3c, 0x32),
	Teal(0x00, 0x80, 0x80),
	Tawny(0xcd, 0x57, 0x00),
	TerraCotta(0xe2, 0x72, 0x5b),
	Thistle(0xd8, 0xbf, 0xd8),
	TitaniumWhite(0xff, 0xff, 0xff),    // same as White
	Tomato(0xff, 0x63, 0x47),
	Turquoise(0x30, 0xd5, 0xc8),
	TyrianPurple(0x66, 0x02, 0x3c),
	Ultramarine(0x12, 0x0a, 0x8f),
	VanDykeBrown(0x41, 0x30, 0x00),
	Vermilion(0xe3, 0x42, 0x34),        // same as Cinnabar
	Violet(0x8b, 0x00, 0xff),
	Viridian(0x40, 0x82, 0x6d),
	Wheat(0xf5, 0xde, 0xb3),
	White(0xff, 0xff, 0xff),            // same as TitaniumWhite
	Wisteria(0xc9, 0xa0, 0xdc),
	Xanthic(0xee, 0xed, 0x09),
	Yellow(0xff, 0xff, 0x00),
	Zucchini(0x50, 0x60, 0x22);
  

  ////////// implementation ///////////////////////////////////////////////////
  
  enum Channel { 
    Red (0), Green (1), Blue (2), Alpha (3); 
    private int channel;
    Channel(int c) {channel = c;}
    public int getChannel() {return channel;}
  }

  
  private int[] channels;
  
  private void init() { channels = new int[4]; }
  private void setChannel(Channel c, int x) {channels[c.getChannel()]=x;}
  private void setChannels(int r, int g, int b) {
    setChannel(Channel.Red,    r); 
    setChannel(Channel.Green,  g);
    setChannel(Channel.Blue,   b); 
  }
  private void setChannels(int r, int g, int b, int a) {
    setChannels(r,g,b); 
    setChannel(Channel.Alpha, a); 
  }
  
  Color() {init(); setChannels(255,255,255);}
  Color(int r, int g, int b) {init(); setChannels(r,g,b);}
  Color(int r, int g, int b, int a) {init(); setChannels(r,g,b,a);}
  
  
  public int getChannel(Channel channel) { return channels[channel.getChannel()];}
  public int getRed() {return getChannel(Channel.Red);}
  public int getBlue() {return getChannel(Channel.Blue);}  
  public int getGreen() {return getChannel(Channel.Green);}  
  public int getAlpha() {return getChannel(Channel.Alpha);}  
      
}